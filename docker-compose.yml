version: "3.3"
services:
  #PHP Service
  app:
    build:
      args:
        user: ubuntu
        uid: 1000
      context: ./
      dockerfile: Dockerfile
    image: pastillero
    container_name: pastillero-app
    restart: unless-stopped
    tty: true
    working_dir: /var/www/

    volumes:
      - ./:/var/www
      - ./docker-compose/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - pastillero
  db:
    #    image: mysql:5.7
    image: linuxserver/mariadb
    container_name: pastillero-db
    #    restart: unless-stopped
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: pastillero
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: eber
      MYSQL_PASSWORD: password
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
#      - ./dbdata:/var/lib/mysql/
#      - ./mysql/my.cnf:/etc/mysql/my.cnf
      - ./dbdata:/config
    #    restart: always
    #    environment:
    #      #      MYSQL_DATABASE: pastillero
    #      #      MYSQL_PASSWORD: password
    #      #      MYSQL_USER: eber
    #      MYSQL_DATABASE: ${DB_DATABASE}
    #      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    #      MYSQL_PASSWORD: ${DB_PASSWORD}
    #      MYSQL_USER: ${DB_USERNAME}
    #      SERVICE_TAGS: dev
    #      SERVICE_NAME: mysql
    #    volumes:
    #      - ./docker-compose/mysql:/docker-entrypoint-initdb.d
    #    #      - ./docker-compose/mysql:/var/lib/mysql
    #    #      - ./docker-compose/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - pastillero
  nginx:
    image: nginx:1.17-alpine
    container_name: pastillero-nginx
    restart: unless-stopped
    tty: true
    ports:
      - 8001:80
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker-compose/nginx:/etc/nginx/conf.d
    networks:
      - pastillero
networks:
  pastillero:
    driver: bridge

